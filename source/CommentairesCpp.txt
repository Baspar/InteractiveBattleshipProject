Tous les attributs sont privés !



**** Classe Coordonnees: ****

Attributs:
	abscisse: entier
	ordonnee: entier



**** Classe TailleGrille ****

Attributs:
	longueur: entier
	hauteur: entier



**** Classe Controleur: ****

Attribut: 
	Jeu
	IHMJeu
	IHMBN


Constructeur
On crée un nouveau jeu, et une IHM ayant comme paramètre ce jeu

+ tourDeJeu(Ø) -> Ø
Affiche la carte, saisie, joue le déplacement saisi, et effectue l'action en cours

+ lancerJeu(Ø) -> Ø
Tant que la partie n'est pas terminée, on continue à faire des tours de jeu

+ actionBatailleNavale(Ø) -> Ø
Lance la partie du controleur qui s'occupe de la bataille navale

+ tourDeJeuBatailleNavale(Ø) -> Ø
Tant que la bataille navale n'est pas terminée, on continue à faire des tours de bataille navale



**** Classe IHMBN: ****

Attribut
	BatailleNavale

Constructeur(BatailleNavale)
Initialise la bataille navale

+ afficherJeu(Ø) -> Ø

- afficherGrilleRadar(Ø) -> Ø
On affiche les cases reveles par le joueur courant

- afficherGrilleBateau(Ø) -> Ø
On affiche la grille du joueur courant

+ saisiePlacementBateaux(Ø) -> Grille
On demande au joueur de placer ses bateaux sur leur grille

+ saisieCoup(Ø) -> Coordonnées
On demande au joueur d'entrer les coordonnées de la case qu'il souhaite viser



**** Classe IHMJeu: ****

Attribut:
	Jeu


Constructeur(Jeu)
Initialise le paramètre jeu

+ afficherJeu(Ø) -> Ø
Affiche le jeu (utilise afficherCarte, afficherInteraction et afficherSaisie)

- afficherCarteCourante(Ø) -> Ø
Affiche chaque cellule de la carte où se trouve le joueur

- afficherInteraction(Ø) -> Ø
Affiche les textes que le jeu souhaite envoyer au joueur

- afficherSaisie(Ø) -> Ø
Introduit la zone de saisie

+ saisieDeplacement(Ø) -> coordonnees
Demande au joueur de saisir le déplacement qu'il souhaite effectuer et renvoie les coordonnées de la case où il va



**** Classe Jeu: ****

Attributs:
	monde : Monde
	heros: Joueur
	listePersonnage : liste de PersonnageNonJouable
	actionEnCours: Action
	combat : Combat


Constructeur
On crée un monde et la liste de tous les personnages qui vont participer au jeu

+ jouer(coordonnees) -> Ø
Déplace notre héros puis lance l'action


+ partieFinie(Ø) -> boolean
Renvoie vrai si le jeu est fini, sinon faux



**** Classe Personnage ****

Attributs:
	nom
	carte
	coordonnees	


Constructeur(string nomPers) 
On crée un personnage sans coordonnées ayant comme nom nomPers

+ deplacer(Coordonnees) -> Ø
Place le personnage sur la case dont les coordonnées ont été entrées et supprime le personnage de sa case d'origine, modifie aussi les attributs du personnage



**** Classe Monde ****

Attributs:
	cartes: liste de Carte


Constructeur(Informations nécessaires à la construction du monde en entier)
Création des cartes

- placerJoueurs(Ø) -> Ø
Place les joueurs aux coordonnées prévues


**** Classe Carte ****

Attributs:
	cellules: liste de Cellule
	id: entier
	tailleGrille : TailleGrille

Constructeur(Informations nécessaires à la construction du monde en entier)
Crée chaque cellule à partir des informations en entrée

+ deplacerPersonnage(Personnage, Coordonnees) -> Ø
Supprime le personnage en entrée de sa case de départ et le place sur la case associée aux coordonnées en entrée



**** Classe Cellule ****

Attributs:
	Action

Constructeur(Action)
Crée le type de cellule avec son action



**** Classe Action ****

Attributs:
	texteInteraction: string
	active: boolean


Constructeur(bazaaaar)

+ lancerAction(Ø) -> Ø
déclenche l'action supposée (exemple: combat, transport)



**** Classe Combat ****

Attributs: 
	Joueur1: Personnage
	Joueur2: Personnage

Constructeur (Joueur1, Joueur2)
Initialise les deux joueurs et lance le combat
	
+ retournerGagnant (Ø) -> Personnage
Renvoie le gagnant



**** Classe PersonnageBN ****

Attributs:
	tailleGrille: TailleGrille
	listeBateaux: Liste de Bateau
	arme : Arme

Constructeur

+ placerBateaux (Ø) -> Grille
Pour un joueur IA, renvoie un placement des bateaux prédéfini (ou au hasard)
Pour un joueur humain, ça renvoie null pour indiquer au controleur de passer en mode saisie

+ caseAViser (Ø) -> Coordonnees
Pour un joueur IA, ça renvoie la case calculée
Pour un joueur humain, ça renvoie null



**** Classe BatailleNavale ****

Attributs: 
	liste de 2 PersonnageBN
	liste de 2 grilles
	joueurCourant

Constructeur (joueur1, joueur2)
Initialise les deux joueurs, crée les deux grilles de taille tailleGrille à partir des joueurs puis on va demander aux joueurs de placer leurs bateaux via la méthode placeBateaux

+ jouer (Coordonnees) -> Ø
Le joueur courant vise la case à jouer et tire avec son arme (on actualise les grilles) puis on change de joueur courant

- changerJoueur (Ø) -> Ø
Modifie le joueur courant et la grille courante



**** Classe Grille ****

Attributs
	cases: liste de Case
	tailleGrille : TailleGrille

Constructeur (tailleGrille)
Crée la grille



**** Classe Case ****

Attributs
	touche: boolean
	bateau: Bateau

Constructeur (bateau)
Associe le bateau et la case sur laquelle il se trouve

+ tirerDessus (Ø) -> Ø
Révèle la case, modifie le boolean touche, indique au bateau qu'il s'est fait toucher



**** Classe Bateau ****
 
Attributs
	PV: entier
	coule: boolean
	taille: entier

+ coule (Ø) -> boolean
Renvoie vrai si le bateau a 0 point de vie, faux sinon

+ retirerPV (Ø) -> Ø
Fait perdre un PV au bateau



**** Classe Arme ****

Attributs:
	nom: string

+ tirer (Coordonnees) -> Ø
Modifie la manière de tirer



